# == Class: wordpresscopy
#
# Using two files, a tar of an existing WordPress install directory and a sql
# file of the site's database (generated by mysqldump), re-create the WordPress
# site.
#
# === Parameters
#
# Document parameters here.
#
#  [*wp_site_file*]
#   The .tar.gz file of the WordPress install directory we are duplicating. 
#  [*wp_db_dump*]
#   The .mysql database export (via mysqldump) of the WordPress database we are
#   duplicating.
#  [*old_site_host*]
#   The hostname part of the URL of the site we are duplicating.
#  [*new_site_host*]
#   The hostname part of the URL of our new server. This is used to update the
#   WordPress database for the new site.
#  [*install_dir*]
#   Defaults to /opt/wordpress. The directory in which to install our site.
#  [*wp_owner*]
#   Defaults to 'www-data'. The server username for the WordPress install;
#   should be the user that runs the web server.
#  [*wp_group*]
#   Defaults to 'www-data'. The server group name for the WordPress install.
#  [*db_name*]
#   Defaults to 'wordpress'. The database name for WordPress on the new install.
#   Should match the database name on the copied install or you will need to
#   edit wp-config.php.
#  [*db_user*]
#   Defaults to 'wordpress'. The database user for WordPress on the new install.
#   Should match the database user on the copied install or you will need to
#   edit wp-config.php.
#  [*db_password*]
#   Defaults to 'password'. The database password for WordPress on the new install.
#   Should match the database password on the copied install or you will need to
#   edit wp-config.php.
#
# === Variables
#
# Here you should define a list of variables that this module would require.
#
# === Examples
#
#  class { 'wordpresscopy': 
#    wp_site_file => '/vagrant/myblog.tar.gz',
#    wp_db_dump => '/vagrant/myblog.mysql',
#    db_name => 'wordpress',
#    db_user => 'myblog',
#    db_password => 'password',
#    old_site_host => 'othersite.foo.com',
#    new_site_host => 'foobar.foo.com',
#  }
#
# === Authors
#
# Payton Swick <payton@foolord.com>
#
# === Copyright
#
# Copyright 2013 Payton Swick
#
class wordpresscopy (
  $wp_site_file = 'wordpress.tar.gz',
  $wp_db_dump = 'wordpress.mysql',
  $old_site_host = 'myoldsite.net',
  $new_site_host = 'localhost',
  $install_dir = '/opt/wordpress',
  $wp_owner = 'www-data',
  $wp_group = 'www-data',
  $db_name = 'wordpress',
  $db_user = 'wordpress',
  $db_password = 'password',
) {
  validate_string($install_dir,$wp_site_file,$wp_db_dump,$new_site_host,$wp_owner,$wp_group,$db_name,$db_host,$db_user,$db_password)

  File {
    owner  => $wp_owner,
    group  => $wp_group,
    mode   => '0644',
  }

  Exec {
    path      => ['/bin','/sbin','/usr/bin','/usr/sbin'],
    cwd       => $install_dir,
  }

  Database {
      require => Class['mysql::server'],
  }

  exec { 'enable mod_rewrite':
    command =>"a2enmod rewrite", 
    unless => "readlink -e /etc/apache2/mods-enabled/rewrite.load",
    notify => Service['apache2'],
    require => Package['apache2'],
  }

  file { "${install_dir}":
    ensure => 'directory',
    recurse => true,
  }

  exec { 'extract wordpress':
    command => "tar xzvf ${wp_site_file} -C ${install_dir} --strip-components 1",
    creates => "${install_dir}/index.php",
    require => File["${install_dir}"],
  } ->
  exec { 'set wordpress permissions': 
    command => "chown -R ${wp_owner}:${wp_group} ${install_dir}",
    logoutput => false,
  }

  database { "${db_name}":
    ensure => 'present',
    charset => 'utf8',
  } ->
  database_user { "${db_user}@localhost":
    password_hash => mysql_password($db_password),
  } ->
  database_grant { "${db_user}@localhost/${db_name}":
    privileges => ['all'],
  }

  exec { 'import database':
    unless => "test -z 'mysql -u${db_user} -p${db_password} ${db_name} -e \"show tables\"'", # FIXME: Not sure this is working!
    command => "mysql -u${db_user} -p${db_password} ${db_name} < ${wp_db_dump}",
    require => [ Database["${db_name}"], Database_user["${db_user}@localhost"], Database_grant["${db_user}@localhost/${db_name}"] ],
  }

  file { "${install_dir}/searchreplacedb2.php":
    ensure => file,
    source => 'puppet:///modules/wordpresscopy/searchreplacedb2.php',
  } ->
  file { "${install_dir}/searchreplacedb2cli.php":
    ensure => file,
    source => 'puppet:///modules/wordpresscopy/searchreplacedb2cli.php',
    mode => '0766',
  }

  exec { 'run searchreplacedb':# FIXME: this only runs on the second try
    command => "${install_dir}/searchreplacedb2cli.php --host localhost --user ${db_user} --database ${db_name} --pass '${$db_password}' --charset utf-8 --search '${old_site_host}' --replace '${new_site_host}'",
    require => [ Exec['import database'], File["${install_dir}/searchreplacedb2cli.php"], File["${install_dir}/searchreplacedb2.php"] ],
  }

  exec { 'delete searchreplacedb2.php':
    command => "rm -f ${install_dir}/searchreplacedb2.php",
    require => Exec['run searchreplacedb'],
  } ->
  exec { 'delete searchreplacedb2cli.php':
    command => "rm -f ${install_dir}/searchreplacedb2cli.php",
    require => Exec['run searchreplacedb'],
  }

  notice("Your IP address is ${ipaddress_eth1}")
}
